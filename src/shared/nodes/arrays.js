const arrayFunctions = {
  chunk: [{param2: 'size'}],
  compact: [],
  concat: [{param2: {name: 'values', type: 'JSON'}}],
  difference: [{param2: {name: 'values', type: 'JSON'}}],
  differenceBy: [{param2: {name: 'values', type: 'JSON'}}, {param3: 'iteratee'}],
  drop: [{param2: 'n'}],
  dropRight: [{param2: 'n'}],
  dropRightWhile: [{param2: 'predicate'}],
  dropWhile: [{param2: 'predicate'}],
  fill: [{param2: 'value'}, {param3: 'start'}, {param4: 'end'}],
  findIndex: [{param2: 'predicate'}, {param3: 'fromIndex'}],
  fromLastIndex: [{param2: 'predicate'}, {param3: 'fromIndex'}],
  flatten: [],
  flattenDeep: [],
  flattenDepth: [{param2: 'depth'}],
  fromPairs: [],
  head: [],
  indexOf: [{param2: 'value'}, {param3: 'fromIndex'}],
  initial: [],
  intersection: [],
  intersectionBy: [{param2: 'iteratee'}],
  intersectionWith: [{param2: 'comperator'}],
  join: [{param2:'separator'}],
  last: [],
  lastIndexOf: [{param2: 'value'}, {param3: 'fromIndex'}],
  nth: [{param2: 'n'}],
  pull: [{param2: {name: 'values', type: 'JSON'}}],
  pullAll: [{param2: {name: 'values', type: 'JSON'}}],
  pullAllBy: [{param2: {name: 'values', type: 'JSON'}}, {param3: 'iteratee'}],
  pullAllWith: [{param2: {name: 'values', type: 'JSON'}}, {param3: 'comperator'}],
  pullAt: [{param2: 'indexes'}],
  remove: [{param2: 'predicate'}],
  reverse: [],
  slice: [{param2: 'start'}, {param3: 'end'}],
  sortedIndex: [{param2: 'value'}],
  sortedIndexBy: [{param2: 'value'}, {param3: 'iteratee'}],
  sortedIndexOf: [{param2: 'value'}],
  sortedLastIndex: [{param2: 'value'}],
  sortedLastIndexBy: [{param2: 'value'}, {param3: 'iteratee'}],
  sortedLastIndexOf: [{param2: 'value'}],
  sortedUniq: [],
  sortedUniqBy: [{param2: 'iteratee'}],
  tail: [],
  take: [{param2: 'number'}],
  takeRight: [{param2: 'number'}],
  takeRightWhile: [{param2: 'predicate'}],
  takeWhile: [{param2: 'predicate'}],
  union: [],
  unionBy: [{param2: 'iteratee'}],
  unionWith: [{param2: 'comperator'}],
  uniq: [],
  uniqBy: [{param2: 'iteratee'}],
  uniqWith: [{param2: 'comperator'}],
  unzip: [],
  without: [{param2: {name: 'values', type: 'JSON'}}],
  xor: [],
  xorBy: [{param2: 'iteratee'}],
  xorWith: [{param2: 'comperator'}],
  zip: [],
  zipObject: [{param2: {name: 'values', type: 'JSON'}}],
  zipObjectDeep: [{param2: {name: 'values', type: 'JSON'}}],
  zipWith: [{param2: 'iteratee'}],

};
module.exports = {arrayFunctions};